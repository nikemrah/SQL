# In this project, I downloaded Spotify data from Kaggle, then I created a table into which I inserted the Spotify data. Finally, I performed data analytics using SQL.

# This is the code that I used to create the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# After creating the table, I inserted the Spotify Data CSV into the table. Finally, I explored the data, answering questions using the following SQL queries: 

/* What is the average popularity, danceability, and energy by artist and track? */

SELECT artist_name AS artist, track_name AS song, AVG(popularity) AS average_popularity, AVG(danceability) AS average_danceability, AVG(energy) AS average_energy
    FROM BIT_DB.spotifydata
    GROUP BY artist_name, track_name;
    
/* Who are the top 10 artists based on popularity? */

SELECT DISTINCT artist_name AS artist, popularity 
    FROM BIT_DB.spotifydata
    ORDER BY popularity DESC
    LIMIT 10;

/* Which artist released the longest song? */

SELECT artist_name AS artist, track_name as song, duration_ms AS duration
    FROM BIT_DB.spotifydata
    ORDER BY duration_ms DESC
    LIMIT: 1;

/* What is the average danceability for the 10 most popular songs? */

SELECT AVG(danceability) AS average_danceability
    FROM BIT_DB.spotifydata
    WHERE track_name 
    IN (SELECT track_name 
        FROM BIT_DB.spotifydata 
        ORDER BY popularity DESC 
        LIMIT 10);
        
